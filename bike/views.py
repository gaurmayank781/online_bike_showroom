from django.shortcuts import render,redirectfrom django.contrib.auth.models import Userfrom django.contrib.auth import authenticate,logout,loginfrom .models import *import datetime# Create your views here.def Home(request):    all_cat = Bike_detail.objects.all()    company = Company.objects.all()    type = Bike_Type.objects.all()    if request.method == "POST":        try:            com = request.POST['company']            com1 = Company.objects.get(name=com)            return redirect('view_bike_customer', com1.id)        except:            pass        try:            bik = request.POST['bike']            bike = Bike_detail.objects.get(bike_name=bik)            return redirect('view_bike_index', bike.id)        except:            pass        try:            ty = request.POST['type']            type = Bike_Type.objects.get(type=ty)            return redirect('view_bike_type', type.id)        except:            pass        try:            pri = request.POST['price']            return redirect('view_bike_price', pri)        except:            pass    d = {'all_cat':all_cat,'company':company,'type':type}    return render(request,'carousel.html',d)def About(request):    return render(request,'about.html')def Contact(request):    return render(request,'contact.html')def signup_user(request):    error = False    if request.method == 'POST':        f = request.POST['fname']        l = request.POST['lname']        u = request.POST['uname']        e = request.POST['email']        i = request.FILES['image']        p = request.POST['pwd']        add = request.POST['add']        ci = request.POST['city']        s = request.POST['state']        con = request.POST['mobile']        user = User.objects.create_user(username=u,email=e, password=p, first_name=f,last_name=l)        sign = Signup.objects.create(user=user,mobile=con,image=i,address=add,city=ci,state=s)        error = True    d = {'error':error}    return render(request, 'signup.html',d)def view_bike_index(request,pid):    if not request.user.is_authenticated:        return redirect('login_user')    bike = Bike_detail.objects.filter(id=pid)    d = {'bike':bike}    return render(request,'view_bike_customer.html',d)def view_bike_type(request,pid):    if not request.user.is_authenticated:        return redirect('login_user')    type = Bike_Type.objects.get(id=pid)    bike = Bike_detail.objects.filter(type=type)    d = {'bike':bike}    return render(request,'view_bike_customer.html',d)def view_bike_price(request,price):    if not request.user.is_authenticated:        return redirect('login_user')    bike = ""    if price == "Below 1,00,000":        bike = Bike_detail.objects.filter(price__lte=100000)    elif price == "1,00,000 to 5,00,000":        bike = Bike_detail.objects.filter(price__lte=500000,price__gte=100000)    elif price == "5,00,000 to 10,00,000":        bike = Bike_detail.objects.filter(price__lte=1000000,price__gte=500000)    else:        bike = Bike_detail.objects.filter(price__gte=1000000)    d = {'bike':bike}    return render(request,'view_bike_customer.html',d)def Login(request):    error = ""    if request.method == "POST":        u = request.POST['uname']        p = request.POST['pwd']        user = authenticate(username=u, password=p)        if user:            login(request, user)            error = "yes"        else:            error = "not"    d = {'error': error}    return render(request,'login.html',d)def Admin_Login(request):    error = ""    if request.method == "POST":        u = request.POST['uname']        p = request.POST['pwd']        user = authenticate(username=u, password=p)        try:            if user.is_staff:                login(request, user)                error = "yes"            else:                error = "not"        except:            error="not"    d = {'error': error}    return render(request,'loginadmin.html',d)def Logout(request):    logout(request)    return redirect('home')def Admin_Home(request):    if not request.user.is_authenticated:        return redirect('login_admin')    user = Signup.objects.all()    bike = Bike_detail.objects.all()    type = Bike_detail.objects.all()    company = Company.objects.all()    u_t =0    b_t = 0    t_t = 0    c_t = 0    for i in user:        u_t+=1    for i in bike:        b_t+=1    for i in type:        t_t+=1    for i in company:        c_t+=1    d = {'b_t':b_t,'t_t':t_t,'c_t':c_t,'u_t':u_t}    return render(request,'admin_home.html',d)def Add_bike_type(request):    if not request.user.is_authenticated:        return redirect('login_admin')    error = ""    if request.method == "POST":        b = request.POST['bike']        Bike_Type.objects.create(type=b)        error = "yes"    d = {'error':error}    return render(request,'bike_type.html',d)def View_bike_type(request):    if not request.user.is_authenticated:        return redirect('login_admin')    bike = Bike_Type.objects.all()    d = {'bike':bike}    return render(request,'view_bike_type.html',d)def Add_company(request):    if not request.user.is_authenticated:        return redirect('login_admin')    error = ""    if request.method == "POST":        b = request.POST['cname']        c = request.POST['city']        m = request.POST['mobile']        e = request.POST['email']        s = request.POST['state']        a = request.POST['add']        i = request.FILES['img']        Company.objects.create(name=b,image=i,email1=e,mobile=m,city=c,state=s,address=a)        error = "yes"    d = {'error':error}    return render(request,'add_company.html',d)def View_Company(request):    if not request.user.is_authenticated:        return redirect('login_admin')    bike = Company.objects.all()    d = {'bike':bike}    return render(request,'view_company.html',d)def View_Company_Customer(request):    if not request.user.is_authenticated:        return redirect('login_user')    bike = Company.objects.all()    d = {'company':bike}    return render(request,'view_company_customer.html',d)def View_Bike_Customer(request,pid):    if not request.user.is_authenticated:        return redirect('login_user')    bike=""    cat1=""    if pid == 0:        bike = Bike_detail.objects.all()    else:        cat1 = Company.objects.get(id=pid)        bike = Bike_detail.objects.filter(company=cat1).all()    d = {'bike':bike}    return render(request,'view_bike_customer.html',d)def View_Bike_Detail(request,pid):    if not request.user.is_authenticated:        return redirect('login_user')    bike = Bike_detail.objects.get(id=pid)    d = {'bike':bike}    return render(request,'view_bike_detail.html',d)def View_Booking_Detail(request,pid):    if not request.user.is_authenticated:        return redirect('login_admin')    bike = Booking.objects.get(id=pid)    d = {'bike':bike}    return render(request,'booking_detail.html',d)def View_Zoom_Feel(request,pid):    bike = Bike_detail.objects.get(id=pid)    d = {'bike':bike}    return render(request,'feel_zoom.html',d)def View_Bike(request):    if not request.user.is_authenticated:        return redirect('login_admin')    bike = Bike_detail.objects.all()    d = {'bike':bike}    return render(request,'view_bike.html',d)def Add_Bike(request):    if not request.user.is_authenticated:        return redirect('login_admin')    error = ""    bike_type = Bike_Type.objects.all()    company = Company.objects.all()    if request.method == "POST":        bn = request.POST['bname']        p = request.POST['bprice']        num = request.POST['bnum']        le = request.POST['blen']        hei = request.POST['bhei']        wid = request.POST['bwid']        ty = request.POST['type']        com = request.POST['company']        ftype = request.POST['btype']        dis = request.POST['bdisplace']        pow = request.POST['maxpower']        tor = request.POST['maxtorq']        mi = request.POST['milage']        ge = request.POST['gear']        fr = request.POST['front']        re = request.POST['rear']        ad = request.POST['add']        i1 = request.FILES['image1']        i2 = request.FILES['image2']        i3 = request.FILES['image3']        i4 = request.FILES['image4']        i5 = request.FILES['image5']        com1 = Company.objects.get(name=com)        type = Bike_Type.objects.get(type=ty)        Bike_detail.objects.create(bike_name=bn,img1=i1,img2=i2,img3=i3,img4=i4,img5=i5,                                   price=p,number=num,fuel_type=ftype,displacement=dis,                                   max_power=pow,max_torque=tor,milage=mi,gear=ge,front_type=fr,rear_type=re,                                   length=le,width=wid,height=hei,address=ad,                                   type=type,company=com1)        error = "yes"    d = {'error':error,'bike_type':bike_type,'company':company}    return render(request,'add_bike.html',d)def Booking_Order(request,pid):    if not request.user.is_authenticated:        return redirect('login_user')    user = User.objects.get(id=request.user.id)    sign = Signup.objects.get(user=user)    bike = Bike_detail.objects.get(id=pid)    book = Booking.objects.create(signup = sign,bike = bike,date1=datetime.date.today())    error = "booked"    return redirect('view_order',error)def View_Order(request,error):    error1=""    order = ""    try:        if error == "booked":            error1 = error            user = User.objects.get(id=request.user.id)            sign = Signup.objects.get(user=user)            order = Booking.objects.filter(signup=sign).all()        else:            error1 = "not"            user = User.objects.get(id=request.user.id)            sign = Signup.objects.get(user=user)            order = Booking.objects.filter(signup=sign).all()    except:        pass    d = {'order':order,'error':error1}    return render(request,'view_order.html',d)def View_New_Booking(request):    if not request.user.is_authenticated:        return redirect('login_admin')    status = Status.objects.get(status="pending")    order = Booking.objects.filter(status=status).all()    d = {'order':order}    return render(request,'view_new_booking.html',d)def View_Booking(request):    if not request.user.is_authenticated:        return redirect('login_admin')    order = Booking.objects.all()    d = {'order':order}    return render(request,'view_booking.html',d)def Feedback(request, pid):    if not request.user.is_authenticated:        return redirect('login_user')    date1 = datetime.date.today()    user = User.objects.get(id=pid)    sign = Signup.objects.filter(user=user).first()    error = False    if request.method == "POST":        d = request.POST['date']        u = request.POST['uname']        e = request.POST['email']        con = request.POST['contact']        m = request.POST['desc']        user = User.objects.filter(username=u, email=e).first()        sign = Signup.objects.filter(user=user, mobile=con).first()        Send_Feedback.objects.create(signup=sign, date=date1, message1=m)        error = True    d = {'sign': sign, 'date1': date1,'error':error}    return render(request, 'feedback.html', d)def view_feedback(request):    feed = Send_Feedback.objects.all()    d = {'feed':feed}    return render(request,'view_feedback.html',d)def Edit_status(request,pid):    if not request.user.is_authenticated:        return redirect('login_admin')    book = Booking.objects.get(id=pid)    stat = Status.objects.all()    if request.method == "POST":        n = request.POST['book']        s = request.POST['status']        book.id = n        sta = Status.objects.filter(status=s).first()        book.status = sta        book.save()        return redirect('view_booking')    d = {'book': book, 'stat': stat}    return render(request, 'assgin_status.html', d)def Edit_Bike(request,pid):    error = ""    bike = Bike_detail.objects.get(id=pid)    bike_type = Bike_Type.objects.all()    company = Company.objects.all()    if request.method == "POST":        bn = request.POST['bname']        p = request.POST['bprice']        num = request.POST['bnum']        le = request.POST['blen']        hei = request.POST['bhei']        wid = request.POST['bwid']        ty = request.POST['type']        com = request.POST['company']        ftype = request.POST['btype']        dis = request.POST['bdisplace']        pow = request.POST['maxpower']        tor = request.POST['maxtorq']        mi = request.POST['milage']        ge = request.POST['gear']        fr = request.POST['front']        re = request.POST['rear']        ad = request.POST['add']        try:            i1 = request.FILES['image1']            bike.img1=i1            bike.save()        except:            pass        try:            i2 = request.FILES['image2']            bike.img2=i2            bike.save()        except:            pass        try:            i3 = request.FILES['image3']            bike.img3=i3            bike.save()        except:            pass        try:            i4 = request.FILES['image4']            bike.img4=i4            bike.save()        except:            pass        try:            i5 = request.FILES['image5']            bike.img5=i5            bike.save()        except:            pass        com1 = Company.objects.get(name=com)        type = Bike_Type.objects.get(type=ty)        bike.company = com1        bike.type = type        bike.bike_name = bn        bike.price = p        bike.number = num        bike.fuel_type = ftype        bike.displacement = dis        bike.max_torque = tor        bike.max_power = pow        bike.milage = mi        bike.gear = ge        bike.front_type = fr        bike.rear_type = re        bike.length = le        bike.width = wid        bike.height = hei        bike.address = ad        bike.save()        error = "yes"    d = {'error':error,'bike_type':bike_type,'bike':bike,'company':company}    return render(request,'edit_bike_detail.html',d)def Edit_company(request,pid):    error = ""    com = Company.objects.get(id=pid)    if request.method == "POST":        b = request.POST['cname']        c = request.POST['city']        e = request.POST['email']        s = request.POST['state']        a = request.POST['add']        try:            i = request.FILES['img']            com.image = i            com.save()        except:            pass        com.name = b        com.city = c        com.email1 = e        com.address = a        com.state = s        com.save()        error = "yes"    d = {'error':error,'com':com}    return render(request,'edit_company.html',d)def Edit_bike_type(request,pid):    error = ""    type = Bike_Type.objects.get(id=pid)    if request.method == "POST":        b = request.POST['bike']        type.type = b        type.save()        error = "yes"    d = {'error':error,'type':type}    return render(request,'edit_bike_type.html',d)def delete_bike_type(request,pid):    type = Bike_Type.objects.get(id=pid)    type.delete()    return redirect('view_bike_type')def delete_bike(request,pid):    type = Bike_detail.objects.get(id=pid)    type.delete()    return redirect('view_bike_detail')def delete_company(request,pid):    type = Company.objects.get(id=pid)    type.delete()    return redirect('view_company')def delete_feedback(request,pid):    type = Send_Feedback.objects.get(id=pid)    type.delete()    return redirect('view_feedback')def delete_booking(request,pid):    type = Booking.objects.get(id=pid)    type.delete()    if request.user.is_staff:        return redirect('view_booking')    else:        return redirect('view_order','not')def delete_user(request,pid):    type = User.objects.get(id=pid)    type.delete()    return redirect('view_customer')def view_customer(request):    user = Signup.objects.all()    d = {'user':user}    return render(request,'view_customer.html',d)def profile(request):    if not request.user.is_authenticated:        return redirect('login_user')    user = User.objects.get(id=request.user.id)    pro = Signup.objects.get(user=user)    d={'pro':pro,'user':user}    return render(request,'profile.html',d)def Edit_profile(request):    if not request.user.is_authenticated:        return redirect('login_user')    error = False    user=User.objects.get(id=request.user.id)    pro = Signup.objects.get(user=user)    if request.method == 'POST':        f = request.POST['fname']        l = request.POST['lname']        u = request.POST['uname']        c = request.POST['city']        ad = request.POST['add']        e = request.POST['email']        con = request.POST['contact']        try:            i = request.FILES['img']            pro.image = i            pro.save()        except:            pass        pro.user.username=u        user.first_name=f        user.last_name=l        user.email=e        pro.mobile=con        pro.city=c        pro.address=ad        pro.save()        user.save()        error = True    d = {'error':error,'pro':pro}    return render(request, 'edit_profile.html',d)